Shell基础
	Shell概述：
		1.Shell 是什么
		Shell是一个命令行解释器，它为用户提供了一个向Linux内核发送请求
		以便运行程序的界面系统级程序，用户可以用shell来启动、挂起、停止
		甚至编写一些程序。
		
		Shell还是一个功能强大的编程语言，易编写，易调试，灵活性较强。Shell
		是解释执行的脚本语言，在Shell中可以直接调用Linux系统命令。
		
		Shell主要有两种语法，Bourne和C，这两种语法彼此不兼容。Bourne家族
		主要包括sh，ksh,bash,psh,zsh;C家族主要包括：csh,tcsh.
		
		Linux中主要用bash.
		
	1. echo 输出命令
		echo [选项][输出内容]
		选项：
			-e:支持反斜线控制的字符转换
			（把指定内容输出到屏幕上）
			\a	输出警告音
			\b	退格键，也就是向左删除键
			\n	换行符
			\r	回车键
			\t	制表符，也就是tab键
			\v	垂直制表符
			\0nnn	按照8进制ASCII码输出字符，其中0为数字0，nnn是三位八进制数
			\xhh	按照十六进制ASCII码表输出字符，其中hh是两位十六进制数
			
			（！在echo中有特殊含义，不能使用）
			（linux本机不支持中文字符，但是可以通过远程工具来使用汉字）
			
			echo支持颜色输出：
			
			\e[1;    开启颜色选项
			\e[0m	 关闭颜色选项
			30m = 黑色	31m = 红色 32m = 绿色 33m = 黄色
			34m = 蓝色	35m = 洋红 36m = 青色 37m = 白色
			
			例子：
				echo -e "\e[1;31m marry sister feng \e[0m "
		
	脚本例子：
		vim hello.sh
		#!/bin/bash
		（固定格式，不能省略，表示标准linux脚本文件）
		#The first program
		（除上面的情况外，#表示注释）
		echo -e "\e[1;31m sky king cover land tiger \e[0m "
		（linux命令可以直接嵌入在shell中）
		
	脚本执行：
		赋予执行权限，直接运行
			chmod 755 hello.sh
			./hello.sh	（相对路径）
		通过bash调用执行脚本
			bash hello.sh
			
	Bash的基本功能：
		1.命令别名与快捷键
			查看与设定别名
				alias
				#查看系统中所有命令的别名
				
				alias 别名 = ‘原命令’
				#设定命令别名
				
			别名永久生效与删除别名
				vi ~/.bashrc
				#写入环境变量配置文件
				
				unalias 别名
				#删除别名
				（临时删除，彻底删除需要改配置文件）
				
				命令生效顺序：
					第一顺位执行用绝对路径或相对路径执行命令
					第二顺位执行别名
					第三顺位执行Bash的内部命令
					第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令
					
				常用快捷键：
					ctrl+c	强制终止当前命令
					ctrl+l	清屏
					ctrl+a	光标移动到命令行首
					ctrl+e	光标移动到命令行尾
					ctrl+u	从光标所在位置删除到行首
					ctrl+z	把命令放入后台
					ctrl+r	在历史命令中搜索
				
		2.历史命令
			history [选项][历史命令保存文件]
			选项：
				-c:清空历史命令
				-w:把缓存中的历史命令写入历史命令保存文件~/.bash_history
			
			历史命令默认会保存1000条，可以在环境变量配置文件/etc/profile中
			进行修改
			
			历史命令的调用：
				使用上、下箭头调用以前的历史命令
				使用“！n”重复执行第n条历史命令
				使用“！！”重复执行上一条命令
				使用“！字串”重复执行最后一条以该字串开头的命令
				
			命令和文件补全：
				在Bash中，命令与文件补全是非常方便与常用的功能，我们只要在
				输入命令或文件时，按tab键就会自动补全
				
		3.输出重定向
		4.多命令顺序执行
		5.Shell中特殊符号
		
		
			
			